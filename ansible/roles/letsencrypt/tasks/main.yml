---
# tasks file for certbot

- name: install some basic tools
  yum:
   name: openssl,python3-pyOpenSSL.noarch

- name: create required directories in /etc/letsencrypt
  ansible.builtin.file:
    path: "/etc/letsencrypt/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=x,o=x
  with_items:
  - account
  - certs
  - csrs
  - keys

- name: generate a letsencrypt account key
  community.crypto.openssl_privatekey:
    path: "{{ letsencrypt_account_key }}"
    type: RSA
    size: 4096

- name: generate a private key for {{ inventory_hostname_short }}.{{ domain_name }}
  community.crypto.openssl_privatekey:
    path: "{{ letsencrypt_keys_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.key"
    type: RSA
    size: 4096

- name: generate an OpenSSL Certificate Signing Request
  community.crypto.openssl_csr:
    path: "{{ letsencrypt_csrs_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.csr"
    privatekey_path: "{{ letsencrypt_keys_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.key"
    common_name: "{{ inventory_hostname_short }}.{{ domain_name }}"

- name: create a challenge for {{ inventory_hostname_short }}.{{ domain_name }} using a account key from a variable.
  community.crypto.acme_certificate:
    terms_agreed: "{{ acme_terms_agreed }}"
    acme_version: "{{ acme_version }}"
    acme_directory: "{{ acme_directory }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.crt"
  register: letsencrypt_challenge

- name: create the required .well-known structure.
  ansible.builtin.file:
    dest: /var/www/html/.well-known/acme-challenge
    mode: 0755
    state: directory

- name: copy the challenge data to the web sever.
  ansible.builtin.copy:
    dest: /usr/share/nginx/html/{{ letsencrypt_challenge['challenge_data'][inventory_hostname_short].[domain_name]['http-01']['resource'] }}
    content: "{{ letsencrypt_challenge['challenge_data'][inventory_hostname_short].[domain_name]['http-01']['resource_value'] }}"
    mode: 0644
  when: letsencrypt_challenge is changed and domain_name in letsencrypt_challenge['challenge_data']

- name: create a challenge for {{ inventory_hostname_short }}.{{ domain_name }} using a account key file.
  community.crypto.acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    terms_agreed: "{{ acme_terms_agreed }}"
    challenge: "{{ acme_challenge_type }}"
    src: "{{ letsencrypt_csrs_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.csr"
    cert: "{{ letsencrypt_certs_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}.crt"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ inventory_hostname_short }}.{{ domain_name }}.crt"
    remaining_days: 14
    chain_dest: "{{ letsencrypt_certs_dir }}/{{ inventory_hostname_short }}.{{ domain_name }}-intermediate.crt"
    data: "{{ letsencrypt_challenge }}"